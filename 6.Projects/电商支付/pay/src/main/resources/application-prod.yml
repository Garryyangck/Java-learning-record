# 应用服务 WEB 访问端口
#server:
  # 部署到8081端口，和mall项目的8081端口区分开
  # 但是并不再配置文件中配置8081端口，而是还是让它默认8080端口，然后在/etc/systemd/system/pay.service中配置-Dserver.port=8081
#  port: 8081

spring:
  # Mybatis 数据库连接配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 1234
    url: jdbc:mysql://localhost:3306/mall?characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
  rabbitmq:
    addresses: 127.0.0.1
    # 端口不要配置成15672了，那是GUI的端口
    port: 5672
    password: guest
    username: guest

mybatis:
  configuration:
    # 自动将下划线命名法转换为驼峰命名法，引入mybatis-generator后就不需要了，它使用resultMap做了映射
    map-underscore-to-camel-case: true
  # 解决*Mapper.xml文件找不到的问题，classpath本质是编译后的target/classes目录
#  mapper-locations: classpath:mapper/*.xml

logging:
  pattern:
    # 修改日志的格式
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %magenta(%-5level) %green([%-50.50class]) >>> %cyan(%msg) %n"
  level:
    # 设置日志最低级别
    garry.community: debug

# wx支付的相关配置
wx:
  appId: wx3e6b9f1c5a7ff034
  mchId: 1614433647
  mchKey: Aa111111111122222222223333333333
  # 此处无需指定8081端口，因为nginx将/pay/映射到了127.0.0.1:8081/pay/
  # 因此微信系统发来的请求会被引到http://192.168.33.129:8081/pay/notify
  notifyUrl: http://192.168.33.129/pay/notify
  returnUrl: http://192.168.33.129/#/order/list

